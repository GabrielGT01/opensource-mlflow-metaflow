{"datastore": "local", "version": "1.0", "attempt": 0, "python_version": "3.12.0 | packaged by Anaconda, Inc. | (main, Oct  2 2023, 12:22:05) [Clang 14.0.6 ]", "objects": {"recall_threshold": "865735e541c31df8335d84781a2cfcc47a4f866b", "name": "92e60a0929068568a02948e7e0bb9f5af2b72a72", "dataset": "fa4e1991dcd46a62a9f004ac3dab97a5627ef9c6", "accuracy_threshold": "865735e541c31df8335d84781a2cfcc47a4f866b", "_transition": "f3627f46179fdd95bf0e83101840fd1d71b60e40", "_task_ok": "caa40ab420354941d2127f64360105b8548b8802", "_success": "caa40ab420354941d2127f64360105b8548b8802", "_graph_info": "c9b1fd24396b1efc6b9c2a8f564b89075561f14f", "_foreach_stack": "4ca058df2ea422cca260c585409d6ac9face7ebe", "y_untransformed_val": "a1461cf95d914091f904181757302ca0afa3977e", "y_untransformed_train": "2073ee4b016812d830188810f449db0a65a29083", "y_untransformed_test": "67ab0726b1809dd2f771cf3dd0287756bdd18bc2", "training_parameters": "71397aef0de2a21e2b1e2b2af04f0c84cb766f71", "mode": "140be04361a81ae77a10485848e939d317c00e2c", "mlflow_tracking_url": "fbf5326b6b4805ed5983e6d581b7755cacb7cb5e", "mlflow_run_id": "e1f45e82a4900ffa98f3b7c5626ce15a37a40866", "data": "d777e384a1ea06fd4a0815365686b3421df02ba6", "_foreach_var": "f3627f46179fdd95bf0e83101840fd1d71b60e40", "_foreach_num_splits": "f3627f46179fdd95bf0e83101840fd1d71b60e40", "_exception": "d0b312c3528c4cc6d7f949a296847b001f0584a4", "_current_step": "6a6f1f5242b9e984fe313f963dc6624f8e3de562", "X_untransformed_val": "30bde8727a3b392e62b44a54449e1fd9151a09db", "X_untransformed_train": "13c64b456a9dc058e9bde647f6a52e3f996fb038", "X_untransformed_test": "f7d4bb97b70abd1d30dac4ee7c865e29152479e4", "target_transformer": "ad4473e81f7edf607dbf8dbc16278f655e557f0e", "features_transformer": "5b7af5a2b7e404251bb97666e7af5c408cf37c93"}, "info": {"recall_threshold": {"size": 12, "type": "<class 'float'>", "encoding": "gzip+pickle-v2"}, "name": {"size": 18, "type": "<class 'str'>", "encoding": "gzip+pickle-v2"}, "dataset": {"size": 445, "type": "<class 'metaflow.includefile.IncludedFile'>", "encoding": "gzip+pickle-v2"}, "accuracy_threshold": {"size": 12, "type": "<class 'float'>", "encoding": "gzip+pickle-v2"}, "_transition": {"size": 4, "type": "<class 'NoneType'>", "encoding": "gzip+pickle-v2"}, "_task_ok": {"size": 4, "type": "<class 'bool'>", "encoding": "gzip+pickle-v2"}, "_success": {"size": 4, "type": "<class 'bool'>", "encoding": "gzip+pickle-v2"}, "_graph_info": {"size": 4412, "type": "<class 'dict'>", "encoding": "gzip+pickle-v2"}, "_foreach_stack": {"size": 6, "type": "<class 'list'>", "encoding": "gzip+pickle-v2"}, "y_untransformed_val": {"size": 7974, "type": "<class 'pandas.core.series.Series'>", "encoding": "gzip+pickle-v2"}, "y_untransformed_train": {"size": 34090, "type": "<class 'pandas.core.series.Series'>", "encoding": "gzip+pickle-v2"}, "y_untransformed_test": {"size": 7982, "type": "<class 'pandas.core.series.Series'>", "encoding": "gzip+pickle-v2"}, "training_parameters": {"size": 70, "type": "<class 'dict'>", "encoding": "gzip+pickle-v2"}, "mode": {"size": 21, "type": "<class 'str'>", "encoding": "gzip+pickle-v2"}, "mlflow_tracking_url": {"size": 31, "type": "<class 'str'>", "encoding": "gzip+pickle-v2"}, "mlflow_run_id": {"size": 42, "type": "<class 'str'>", "encoding": "gzip+pickle-v2"}, "data": {"size": 167347, "type": "<class 'pandas.core.frame.DataFrame'>", "encoding": "gzip+pickle-v2"}, "_foreach_var": {"size": 4, "type": "<class 'NoneType'>", "encoding": "gzip+pickle-v2"}, "_foreach_num_splits": {"size": 4, "type": "<class 'NoneType'>", "encoding": "gzip+pickle-v2"}, "_exception": {"size": 2304, "type": "<class 'metaflow.exception.MetaflowExceptionWrapper'>", "encoding": "gzip+pickle-v2"}, "_current_step": {"size": 19, "type": "<class 'str'>", "encoding": "gzip+pickle-v2"}, "X_untransformed_val": {"size": 25098, "type": "<class 'pandas.core.frame.DataFrame'>", "encoding": "gzip+pickle-v2"}, "X_untransformed_train": {"size": 113779, "type": "<class 'pandas.core.frame.DataFrame'>", "encoding": "gzip+pickle-v2"}, "X_untransformed_test": {"size": 25170, "type": "<class 'pandas.core.frame.DataFrame'>", "encoding": "gzip+pickle-v2"}, "target_transformer": {"size": 622, "type": "<class 'sklearn.compose._column_transformer.ColumnTransformer'>", "encoding": "gzip+pickle-v2"}, "features_transformer": {"size": 870, "type": "<class 'sklearn.compose._column_transformer.ColumnTransformer'>", "encoding": "gzip+pickle-v2"}}}